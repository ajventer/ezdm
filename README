This is a simple set of tools for dungeon managers.
The current project only targets AD&D 2nd edition rules.

This branch always holds the last known stable build

This is not an RPG game, it's some helper tools for people DM-ing real
games and designed to not get in the way of role-play and story-telling
but simply help to do the maths during encounters and levelling.
Dice rolling can be done by the computer or the tools can be set for
manual dice, in which case you simply enter the results of the roll.

All game data, charts and character sheets are stored in json format. 
There is a simple tool for creating and updating character sheets which
uses a powerful templateing engine to manage them, when new keys are added
to character sheets, simply add them to the template and load the sheets in with
mkcs to ensure the key is in existing sheets.

Tools available:
ezdm - A simple menu for accessing the other tools.
dice_roller - A quick tool for rolling DnD style dice
mkcs - Make Character Sheet - a nice wizard for making character sheets using the template engine
viewchar - A viewer for ezdm character sheets
xp_tool - A tool for giving characters experience that will help manage the process when they level up
test_json - A developer focussed mini-tool just used to rapidly verify the validity of a json file.
quick-combat - A tool to manage combat scenarios

Quick-combat is the crown jewel of the EZDM kit. QuickCombat will let you load up any number of characters
from your existing sheets, and will then guide the process of combat among them under your control.
As the DM you decide who the NPCs attack, you tell the story represented by the information that quickcombat
presents to you. QuickCombat ensures the right sized dice are rolled at the right time, the right saving throws
and modifiers are applied, the right damage recorded etc.
Quick-Combat deals with melee and misile factors, spell-casting and interruptions (including informing you when a spell is finished)
and generically divides spells into heal, damage or other. You tell it what to handle (or what you will be handling yourself), and it 
enables you without getting in your way.
That is the core design goal of the entire EZDM suite - to enable your storytelling while making it easier to follow the rules
and doing the math for you, but without EVER getting in your way.
I wrote EZDM to help with DM-ing my own campaigns - but I hope it may be useful to others, hence it is published here on github.

The EZDM kit will default to using a simple dialog based GUI which requires easygui. To disable easygui just run ezdm --console
Personally, I prefer the console interface, but the GUI version is there for those who want it.



Template controls:
Keys or values which start __? are controls.
The __? parts are not stored in the output sheets, they only exist in the template
to tell the engine how to use the key.
Key controls:
	__U - store the value of this key in upper-case
	__L - store the value of this key in lower-case
	__# - This is used to create subdictionary items with variable number of entries
	      a __# key has a single dictionary in the template showing the subdictionary structure
	      this subdictionary can use any template controls as well. The template engine will let
              the user select how many subdictionaries to create, and populate these by using the subtemplate in the value
Value controls:
__[?,?]
	Value must be selected from the options in the list between the []'s

